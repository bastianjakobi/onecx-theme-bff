---
openapi: 3.0.3
info:
  title: onecx-theme-bff
  description: OneCx theme Bff
  version: "1.0"
servers:
  - url: http://onecx-theme-bff:8080/
tags:
  - name: theme
  - name: imagesInternal
paths:
  /themes:
    get:
      x-onecx:
        permissions:
          themes:
            - read
      tags:
        - themes
      description: Find all themes
      operationId: getThemes
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThemesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not found
    post:
      x-onecx:
        permissions:
          themes:
            - write
      tags:
        - themes
      description: Create theme
      operationId: createTheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThemeRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThemeResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
  /themes/{id}:
    get:
      x-onecx:
        permissions:
          themes:
            - read
      tags:
        - themes
      description: Find theme by id
      operationId: getThemeById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
    put:
      x-onecx:
        permissions:
          themes:
            - write
      tags:
        - themes
      description: Update theme
      operationId: updateTheme
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThemeRequest'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThemeResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
    delete:
      x-onecx:
        permissions:
          themes:
            - delete
      tags:
        - themes
      description: Delete theme
      operationId: deleteTheme
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /themes/name/{name}:
    get:
      x-onecx:
        permissions:
          themes:
            - read
      tags:
        - themes
      description: Find theme by name including workspace
      operationId: getThemeByName
      parameters:
        - $ref: '#/components/parameters/name'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
  /themes/search:
    post:
      x-onecx:
        permissions:
          themes:
            - read
      tags:
        - themes
      description: Search themes by criteria
      operationId: searchThemes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchThemeRequest'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchThemeResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
  /themes/export:
    post:
      x-onecx:
        permissions:
          themes:
            - read
      tags:
        - themes
      description: Export list of themes
      operationId: exportThemes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportThemeRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeSnapshot'
        "404":
          description: No themes founds
  /themes/import:
    post:
      x-onecx:
        permissions:
          themes:
            - write
      tags:
        - themes
      description: Import themes
      operationId: importThemes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeSnapshot'
      responses:
        "200":
          description: Import result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportThemeResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/{refId}/{refType}:
    post:
      x-onecx:
        permissions:
          themes:
            - write
      tags:
        - imagesInternal
      description: Upload Images
      parameters:
        - in: header
          name: Content-Length
          required: true
          schema:
            minimum: 1
            maximum: 110000
            type: integer
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: refType
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/RefType"
      operationId: uploadImage
      requestBody:
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        "400":
          description: Bad Request
    get:
      x-onecx:
        permissions:
          themes:
            - read
      tags:
        - imagesInternal
      description: Get Image by id
      operationId: getImage
      parameters:
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: refType
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/RefType"
      responses:
        "200":
          description: OK
          content:
            image/*:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          themes:
            - write
      tags:
        - imagesInternal
      description: update Images
      operationId: updateImage
      parameters:
        - in: header
          name: Content-Length
          schema:
            type: integer
            minimum: 1
            maximum: 110000
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: refType
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/RefType"
      requestBody:
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /searchConfig/:
    post:
      tags:
        - SearchConfig
      summary: Creates a new search config
      description: Creates a new search config and returns the updated list of search configs by page
      operationId: createSearchConfig
      requestBody:
        description: Creates a new search config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSearchConfigRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSearchConfigResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /searchConfig/{page}:
    get:
      tags:
        - SearchConfig
      summary: Gets the search configs for the specified page.
      description: The search config for the page is returned.
      operationId: getSearchConfigs
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchConfigsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /searchConfig/{configId}:
    put:
      tags:
        - SearchConfig
      summary: Updates the search config specified by the configId
      description: Updates the search config and returns the updated list of search configs  by page
      operationId: updateSearchConfig
      parameters:
        - name: configId
          in: path
          description: ConfigId for the search config to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated values for the specified search config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSearchConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSearchConfigResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    delete:
      tags:
        - SearchConfig
      summary: Deletes the search config
      description: Deletes the search config
      operationId: deleteSearchConfig
      parameters:
        - name: configId
          in: path
          description: ConfigId for the searchConfig to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'

components:
  schemas:
    RefType:
      type: string
      enum: [ logo, favicon ]
    Theme:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          minLength: 2
          type: string
        cssFile:
          type: string
        description:
          type: string
        assetsUrl:
          type: string
        logoUrl:
          type: string
        faviconUrl:
          type: string
        previewImageUrl:
          type: string
        assetsUpdateDate:
          type: string
        properties:
          type: object
    ThemeUpdateCreate:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        name:
          minLength: 2
          type: string
        cssFile:
          type: string
        description:
          type: string
        assetsUrl:
          type: string
        logoUrl:
          type: string
        faviconUrl:
          type: string
        previewImageUrl:
          type: string
        assetsUpdateDate:
          type: string
        properties:
          type: object

    GetThemeResponse:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Theme'
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
    GetThemesResponse:
      allOf: # Combines the PagingResponse and the Resources
        - $ref: '#/components/schemas/PagingResponse'
        - type: object
          properties:
            stream:
              type: array
              items:
                $ref: '#/components/schemas/Theme'
    CreateThemeResponse:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Theme'
    UpdateThemeResponse:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Theme'
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    CreateThemeRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/ThemeUpdateCreate'
    UpdateThemeRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/ThemeUpdateCreate'
    SearchThemeRequest:
      type: object
      properties:
        name:
          type: string
        pageNumber:
          type: integer
          format: int32
          default: 0
        pageSize:
          type: integer
          format: int32
    SearchThemeResponse:
      allOf:
        - $ref: '#/components/schemas/PagingResponse'
        - type: object
          properties:
            stream:
              type: array
              items:
                $ref: '#/components/schemas/Theme'
    PagingResponse:
      type: object
      properties:
        totalElements:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
    Workspace:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    ExportThemeRequest:
      type: object
      properties:
        names:
          type: array
          uniqueItems: true
          items:
            type: string
    ThemeSnapshot:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        themes:
          type: object
          nullable: false
          additionalProperties:
            $ref: '#/components/schemas/EximTheme'
    ImportThemeResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        themes:
          additionalProperties:
            $ref: '#/components/schemas/ImportThemeResponseStatus'
    ImportThemeResponseStatus:
      type: string
      enum:
        - UPDATE
        - CREATED
        - SKIP
    EximTheme:
      type: object
      properties:
        cssFile:
          type: string
        description:
          type: string
        assetsUrl:
          type: string
        logoUrl:
          type: string
        faviconUrl:
          type: string
        previewImageUrl:
          type: string
        assetsUpdateDate:
          type: string
        properties:
          type: object
    ImageInfo:
      type: object
      properties:
        id:
          type: string
    SearchConfig:
      type: object
      required:
        - id
        - page
        - name
        - modificationCount
        - fieldListVersion
        - isReadOnly
        - isAdvanced
        - columns
        - values
      properties:
        id:
          type: string
        page:
          type: string
        name:
          type: string
        modificationCount:
          type: integer
        fieldListVersion:
          type: integer
          description: Version increment of the fields in the UI which you should use when you are making incompatible changes to those fields.
        isReadOnly:
          type: boolean
          description: Defines whether this config can be changed in the UI
        isAdvanced:
          type: boolean
          description: Indicates whether the advanced mode should be displayed
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: string
    GetSearchConfigsResponse:
      allOf:
        - $ref: '#/components/schemas/SearchConfigList'
    CreateSearchConfigRequest:
      type: object
      required:
        - 'page'
        - 'name'
        - 'fieldListVersion'
        - 'isReadonly'
        - 'isAdvanced'
        - 'columns'
        - 'values'
      properties:
        page:
          type: string
        name:
          type: string
        fieldListVersion:
          type: integer
          description: Version increment of the fields in the UI which you should use when you are making incompatible changes to those fields.
        isReadOnly:
          type: boolean
          description: Defines whether this config can be changed in the UI
        isAdvanced:
          type: boolean
          description: Indicates whether the advanced mode should be displayed
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: string
    CreateSearchConfigResponse:
      allOf:
        - $ref: '#/components/schemas/SearchConfigList'
    UpdateSearchConfigRequest:
      type: object
      required:
        - searchConfig
      properties:
        searchConfig:
          $ref: '#/components/schemas/SearchConfig'
    UpdateSearchConfigResponse:
      allOf:
        - $ref: '#/components/schemas/SearchConfigList'
    SearchConfigList:
      type: object
      required:
        - configs
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        configs:
          type: array
          items:
            $ref: '#/components/schemas/SearchConfig'
  parameters:
    pageNumber:
      in: query
      name: pageNumber
      required: false
      schema:
        type: integer
        format: int32
        default: 0
    pageSize:
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
        format: int32
        default: 100
    id:
      in: path
      name: id
      required: true
      schema:
        type: string
    name:
      in: path
      name: name
      required: true
      schema:
        type: string
